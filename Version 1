from collections import deque
import time
import sys

class PersonalDetails:
    def __init__(self, name, registered_in_lipa, is_college_student):
        self.name = name
        self.registered_in_lipa = registered_in_lipa
        self.is_college_student = is_college_student
        self.requirements = Requirements() if self.check_eligibility() else None
    
    def check_eligibility(self):
        return self.is_college_student and self.registered_in_lipa
    
    def get_details(self):
        return f"Name: {self.name}, Registered in Lipa: {'Yes' if self.registered_in_lipa else 'No'}, College Student: {'Yes' if self.is_college_student else 'No'}"

class Requirements:
    def __init__(self):
        self.incomplete = ["CTC Of Grades", "Certificate of Indigency", "RAF", "Valid ID"]
    
    def check_requirements(self):
        if not self.incomplete:
            return "All requirements are complete."
        else:
            return f"Missing requirements: {', '.join(self.incomplete)}"
    
    def pass_requirement(self, requirement):
        if requirement in self.incomplete:
            self.incomplete.remove(requirement)
            print(f"Processing {requirement}...")
            sys.stdout.flush()
            time.sleep(2)
            print(f"{requirement} has been passed. Pending for approval.")
        else:
            print(f"{requirement} is not in the list of incomplete requirements.")

class Queue:
    def __init__(self):
        self.queue = deque()
    
    def add_to_queue(self, student):
        self.queue.append(student)
    
    def process_queue(self):
        return self.queue.popleft() if self.queue else None
    
    def get_size(self):
        return len(self.queue)

def apply_for_scholarship():
    print("\n===== Apply for Scholarship =====")
    name = input("Enter your full name with middle initial: ").strip()
    if not name or any(char.isdigit() for char in name):
        print("Invalid input. Please enter a valid name.")
        return
    
    registered_in_lipa = input("Are you registered in Lipa? (yes/no): ").strip().lower() == "yes"
    is_college_student = input("Are you a college student? (yes/no): ").strip().lower() == "yes"
    
    applicant = PersonalDetails(name, registered_in_lipa, is_college_student)
    print("\nApplicant Details:")
    print(applicant.get_details())
    print("Checking eligibility", end="")
    for _ in range(10):
        sys.stdout.write(".")
        sys.stdout.flush()
        time.sleep(0.2)
    print()
    
    if applicant.check_eligibility():
        for existing_applicant in possible_scholars.queue:
            if existing_applicant.name.lower() == applicant.name.lower():
                print("You are already an applicant. Please proceed with passing your requirements.")
                return
        possible_scholars.add_to_queue(applicant)
        print("You are eligible! Please proceed with passing your requirements.")
    else:
        print("Sorry, you are not eligible. Only college students registered in Lipa can apply.")

def check_requirements():
    print("\n===== Check Requirements =====")
    if possible_scholars.queue:
        name = input("Enter your full name to check requirements: ").strip()
        for applicant in possible_scholars.queue:
            if applicant.name.lower() == name.lower():
                print(f"\nApplicant Details:\n{applicant.get_details()}")
                print("Here's the list of missing requirements:")
                print("-" * 30)
                if applicant.requirements:
                    print("\n".join(applicant.requirements.incomplete))
                else:
                    print("No requirements to display.")
                print("-" * 30)
                return
        print("No applicant found with that name.")
    else:
        print("There are no current applicants.")

def pass_requirement():
    print("\n===== Pass Requirement =====")
    if possible_scholars.queue:
        name = input("Enter your full name to pass a requirement: ").strip()
        for applicant in possible_scholars.queue:
            if applicant.name.lower() == name.lower():
                print(f"\nApplicant Details:\n{applicant.get_details()}")
                print("Here's the list of incomplete requirements:")
                print("-" * 30)
                print("\n".join(applicant.requirements.incomplete))
                print("-" * 30)
                while True:
                    print("\nOptions to pass requirement:")
                    print("A. CTC Of Grades")
                    print("B. Certificate of Indigency")
                    print("C. RAF")
                    print("D. Valid ID")
                    print("E. Exit")
                    option = input("Please select the requirement you want to pass: ").strip().upper()
                    if option == "A":
                        applicant.requirements.pass_requirement("CTC Of Grades")
                    elif option == "B":
                        applicant.requirements.pass_requirement("Certificate of Indigency")
                    elif option == "C":
                        applicant.requirements.pass_requirement("RAF")
                    elif option == "D":
                        applicant.requirements.pass_requirement("Valid ID")
                    elif option == "E":
                        break
                    else:
                        print("Invalid option. Please select a valid option.")
                return
        print("No applicant found with that name.")
    else:
        print("There are no current applicants.")

possible_scholars = Queue()
scholars_college = Queue()

while True:
    print("\nWelcome to MLBB's Modernized Financial Support Queuing Service!")
    print("A. Apply for a scholarship")
    print("B. Check Requirements")
    print("C. Pass Requirement")
    print("D. Exit")
    answer = input("Please select an option: ").strip().lower()
    
    if answer == "a":
        apply_for_scholarship()
    elif answer == "b":
        check_requirements()
    elif answer == "c":
        pass_requirement()
    elif answer == "d":
        print("Thank you for using our system. Have a great day!")
        break
    else:
        print("Invalid response. Please select a valid option.")
    print("------------------------------------------------------------")
